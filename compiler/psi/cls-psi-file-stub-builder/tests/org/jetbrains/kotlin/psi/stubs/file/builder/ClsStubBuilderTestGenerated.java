/*
 * Copyright 2010-2021 JetBrains s.r.o. and Kotlin Programming Language contributors.
 * Use of this source code is governed by the Apache 2.0 license that can be found in the license/LICENSE.txt file.
 */

package org.jetbrains.kotlin.psi.stubs.file.builder;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.JUnit3RunnerWithInners;
import org.jetbrains.kotlin.test.KotlinTestUtils;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.runner.RunWith;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link org.jetbrains.kotlin.generators.tests.TestsPackage}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder")
@TestDataPath("$PROJECT_ROOT")
@RunWith(JUnit3RunnerWithInners.class)
public class ClsStubBuilderTestGenerated extends AbstractClsStubBuilderTest {
    private void runTest(String testDataFilePath) throws Exception {
        KotlinTestUtils.runTest(this::doTest, this, testDataFilePath);
    }

    public void testAllFilesPresentInClsFileStubBuilder() throws Exception {
        KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder"), Pattern.compile("^([^\\.]+)$"), null, false);
    }

    @TestMetadata("AnnotatedFlexibleTypes")
    public void testAnnotatedFlexibleTypes() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/AnnotatedFlexibleTypes/");
    }

    @TestMetadata("AnnotatedParameterInEnumConstructor")
    public void testAnnotatedParameterInEnumConstructor() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/AnnotatedParameterInEnumConstructor/");
    }

    @TestMetadata("AnnotatedParameterInInnerClassConstructor")
    public void testAnnotatedParameterInInnerClassConstructor() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/AnnotatedParameterInInnerClassConstructor/");
    }

    @TestMetadata("AnnotationClass")
    public void testAnnotationClass() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/AnnotationClass/");
    }

    @TestMetadata("AnnotationValues")
    public void testAnnotationValues() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/AnnotationValues/");
    }

    @TestMetadata("Annotations")
    public void testAnnotations() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/Annotations/");
    }

    @TestMetadata("AnnotationsOnNullableTypes")
    public void testAnnotationsOnNullableTypes() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/AnnotationsOnNullableTypes/");
    }

    @TestMetadata("AnnotationsOnParenthesizedTypes")
    public void testAnnotationsOnParenthesizedTypes() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/AnnotationsOnParenthesizedTypes/");
    }

    @TestMetadata("AnonymousReturnWithGenericType")
    public void testAnonymousReturnWithGenericType() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/AnonymousReturnWithGenericType/");
    }

    @TestMetadata("ClassMembers")
    public void testClassMembers() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/ClassMembers/");
    }

    @TestMetadata("ClassObject")
    public void testClassObject() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/ClassObject/");
    }

    @TestMetadata("Const")
    public void testConst() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/Const/");
    }

    @TestMetadata("Contracts")
    public void testContracts() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/Contracts/");
    }

    @TestMetadata("DataClass")
    public void testDataClass() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/DataClass/");
    }

    @TestMetadata("Delegation")
    public void testDelegation() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/Delegation/");
    }

    @TestMetadata("DependencyOnNestedClasses")
    public void testDependencyOnNestedClasses() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/DependencyOnNestedClasses/");
    }

    @TestMetadata("Enum")
    public void testEnum() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/Enum/");
    }

    @TestMetadata("FlexibleTypes")
    public void testFlexibleTypes() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/FlexibleTypes/");
    }

    @TestMetadata("FunInterfaceDeclaration")
    public void testFunInterfaceDeclaration() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/FunInterfaceDeclaration/");
    }

    @TestMetadata("InheritingClasses")
    public void testInheritingClasses() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/InheritingClasses/");
    }

    @TestMetadata("InnerClassEnumEntry")
    public void testInnerClassEnumEntry() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/InnerClassEnumEntry/");
    }

    @TestMetadata("InnerTypes")
    public void testInnerTypes() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/InnerTypes/");
    }

    @TestMetadata("LocalClass")
    public void testLocalClass() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/LocalClass/");
    }

    @TestMetadata("Modifiers")
    public void testModifiers() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/Modifiers/");
    }

    @TestMetadata("MultifileClass")
    public void testMultifileClass() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/MultifileClass/");
    }

    @TestMetadata("NamedCompanionObject")
    public void testNamedCompanionObject() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/NamedCompanionObject/");
    }

    @TestMetadata("NestedClasses")
    public void testNestedClasses() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/NestedClasses/");
    }

    @TestMetadata("Objects")
    public void testObjects() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/Objects/");
    }

    @TestMetadata("PrivateConstField")
    public void testPrivateConstField() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/PrivateConstField/");
    }

    @TestMetadata("PrivateToThis")
    public void testPrivateToThis() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/PrivateToThis/");
    }

    @TestMetadata("Sealed")
    public void testSealed() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/Sealed/");
    }

    @TestMetadata("SecondaryConstructors")
    public void testSecondaryConstructors() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/SecondaryConstructors/");
    }

    @TestMetadata("SuspendLambda")
    public void testSuspendLambda() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/SuspendLambda/");
    }

    @TestMetadata("TopJvmPackageName")
    public void testTopJvmPackageName() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/TopJvmPackageName/");
    }

    @TestMetadata("TopLevelMembersAnnotatedKt")
    public void testTopLevelMembersAnnotatedKt() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/TopLevelMembersAnnotatedKt/");
    }

    @TestMetadata("TopLevelMembersKt")
    public void testTopLevelMembersKt() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/TopLevelMembersKt/");
    }

    @TestMetadata("TypeAliases")
    public void testTypeAliases() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/TypeAliases/");
    }

    @TestMetadata("TypeBoundsAndDelegationSpecifiers")
    public void testTypeBoundsAndDelegationSpecifiers() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/TypeBoundsAndDelegationSpecifiers/");
    }

    @TestMetadata("TypeModifiers")
    public void testTypeModifiers() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/TypeModifiers/");
    }

    @TestMetadata("TypeParams")
    public void testTypeParams() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/TypeParams/");
    }

    @TestMetadata("Types")
    public void testTypes() throws Exception {
        runTest("compiler/psi/cls-psi-file-stub-builder/testData/clsFileStubBuilder/Types/");
    }
}
